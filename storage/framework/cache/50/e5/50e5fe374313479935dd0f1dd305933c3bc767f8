1525182837a:1:{s:9:"gdmap.htm";a:6:{s:8:"fileName";s:9:"gdmap.htm";s:7:"content";s:5114:"[viewBag]
snippetCode = "GDmap"
snippetName = "高德地图"
snippetProperties[lng][title] = "经度"
snippetProperties[lng][type] = "string"
snippetProperties[lng][default] = 113.360288
snippetProperties[lng][options][] = ""
snippetProperties[lat][title] = "纬度"
snippetProperties[lat][type] = "string"
snippetProperties[lat][default] = 22.915366
snippetProperties[lat][options][] = ""
snippetProperties[width][title] = "宽度"
snippetProperties[width][type] = "string"
snippetProperties[width][default] = ""
snippetProperties[width][options][] = ""
snippetProperties[height][title] = "高度"
snippetProperties[height][type] = "string"
snippetProperties[height][default] = "400px"
snippetProperties[height][options][] = ""
snippetProperties[name][title] = "地点名称"
snippetProperties[name][type] = "string"
snippetProperties[name][default] = ""
snippetProperties[name][options][] = ""
snippetProperties[description][title] = "地点描述"
snippetProperties[description][type] = "string"
snippetProperties[description][default] = ""
snippetProperties[description][options][] = ""
snippetProperties[id][title] = "地图ID"
snippetProperties[id][type] = "string"
snippetProperties[id][default] = ""
snippetProperties[id][options][] = ""
==
<?php
function onRun(){
    $this->addJs('http://webapi.amap.com/maps?v=1.3&key=8325164e247e15eea68b59e89200988b');
}
?>
==
<style>
    .my-map {
        margin: 0 auto;
        width: 100%;
        height: 400px;
    }

.my-map .icon { background: url(http://lbs.amap.com/console/public/show/marker.png) no-repeat; }
		.my-map .icon-cir { height: 31px; width: 28px; }
		.my-map .icon-cir-red { background-position: -11px -5px; }
    .amap-container {
        height: 100%;
    }
</style>
<div id="wrap" class="my-map">
    <div id="mapContainer-{{ id }}" style='width:{{ width }};height:{{ height }}'></div>
</div>
<script src="//webapi.amap.com/maps?v=1.3&key=8325164e247e15eea68b59e89200988b"></script>
<script>
    $(function(){
    !function () {
        var infoWindow, map, level = 18,
            center = { lng: {{ lng }}, lat: {{ lat }}},
    features = [{type: "Marker", name: "{{name}}", desc: "{{description}}", color: "red", icon: "cir", offset: {x: -9, y: -20}, lnglat: {lng: {{lng}}, lat: {{lat}} } }];

    function loadFeatures() {
        for (var feature, data, i = 0, len = features.length, j, jl, path; i < len; i++) {
            data = features[i];
            switch (data.type) {
                case "Marker":
                    feature = new AMap.Marker({
                        map: map, position: new AMap.LngLat(data.lnglat.lng, data.lnglat.lat),
                        zIndex: 3, extData: data, offset: new AMap.Pixel(data.offset.x, data.offset.y), title: data.name,
                        content: '<div class="icon icon-' + data.icon + ' icon-' + data.icon + '-' + data.color + '"></div>'
                    });
                    break;
                case "Polyline":
                    for (j = 0, jl = data.lnglat.length, path = []; j < jl; j++) {
                        path.push(new AMap.LngLat(data.lnglat[j].lng, data.lnglat[j].lat));
                    }
                    feature = new AMap.Polyline({
                        map: map, path: path, extData: data, zIndex: 2,
                        strokeWeight: data.strokeWeight, strokeColor: data.strokeColor, strokeOpacity: data.strokeOpacity
                    });
                    break;
                case "Polygon":
                    for (j = 0, jl = data.lnglat.length, path = []; j < jl; j++) {
                        path.push(new AMap.LngLat(data.lnglat[j].lng, data.lnglat[j].lat));
                    }
                    feature = new AMap.Polygon({
                        map: map, path: path, extData: data, zIndex: 1,
                        strokeWeight: data.strokeWeight, strokeColor: data.strokeColor, strokeOpacity: data.strokeOpacity,
                        fillColor: data.fillColor, fillOpacity: data.fillOpacity
                    });
                    break;
                default: feature = null;
            }
            if (feature) { AMap.event.addListener(feature, "click", mapFeatureClick); }
        }
    }

    function mapFeatureClick(e) {
        if (!infoWindow) { infoWindow = new AMap.InfoWindow({ autoMove: true }); }
        var extData = e.target.getExtData();
        infoWindow.setContent("<h5>" + extData.name + "</h5><div>" + extData.desc + "</div>");
        infoWindow.open(map, e.lnglat);
    }

    map = new AMap.Map("mapContainer-{{ id }}", { center: new AMap.LngLat(center.lng, center.lat), level: level });

    loadFeatures();

    map.on('complete', function () {
        map.plugin(["AMap.ToolBar", "AMap.OverView", "AMap.Scale"], function () {
            map.addControl(new AMap.ToolBar);
            map.addControl(new AMap.OverView({ isOpen: true }));
            map.addControl(new AMap.Scale);
        });
    })
            
        }();
    })
</script>";s:5:"mtime";i:1525173430;s:6:"markup";s:3703:"<style>
    .my-map {
        margin: 0 auto;
        width: 100%;
        height: 400px;
    }

.my-map .icon { background: url(http://lbs.amap.com/console/public/show/marker.png) no-repeat; }
		.my-map .icon-cir { height: 31px; width: 28px; }
		.my-map .icon-cir-red { background-position: -11px -5px; }
    .amap-container {
        height: 100%;
    }
</style>
<div id="wrap" class="my-map">
    <div id="mapContainer-{{ id }}" style='width:{{ width }};height:{{ height }}'></div>
</div>
<script src="//webapi.amap.com/maps?v=1.3&key=8325164e247e15eea68b59e89200988b"></script>
<script>
    $(function(){
    !function () {
        var infoWindow, map, level = 18,
            center = { lng: {{ lng }}, lat: {{ lat }}},
    features = [{type: "Marker", name: "{{name}}", desc: "{{description}}", color: "red", icon: "cir", offset: {x: -9, y: -20}, lnglat: {lng: {{lng}}, lat: {{lat}} } }];

    function loadFeatures() {
        for (var feature, data, i = 0, len = features.length, j, jl, path; i < len; i++) {
            data = features[i];
            switch (data.type) {
                case "Marker":
                    feature = new AMap.Marker({
                        map: map, position: new AMap.LngLat(data.lnglat.lng, data.lnglat.lat),
                        zIndex: 3, extData: data, offset: new AMap.Pixel(data.offset.x, data.offset.y), title: data.name,
                        content: '<div class="icon icon-' + data.icon + ' icon-' + data.icon + '-' + data.color + '"></div>'
                    });
                    break;
                case "Polyline":
                    for (j = 0, jl = data.lnglat.length, path = []; j < jl; j++) {
                        path.push(new AMap.LngLat(data.lnglat[j].lng, data.lnglat[j].lat));
                    }
                    feature = new AMap.Polyline({
                        map: map, path: path, extData: data, zIndex: 2,
                        strokeWeight: data.strokeWeight, strokeColor: data.strokeColor, strokeOpacity: data.strokeOpacity
                    });
                    break;
                case "Polygon":
                    for (j = 0, jl = data.lnglat.length, path = []; j < jl; j++) {
                        path.push(new AMap.LngLat(data.lnglat[j].lng, data.lnglat[j].lat));
                    }
                    feature = new AMap.Polygon({
                        map: map, path: path, extData: data, zIndex: 1,
                        strokeWeight: data.strokeWeight, strokeColor: data.strokeColor, strokeOpacity: data.strokeOpacity,
                        fillColor: data.fillColor, fillOpacity: data.fillOpacity
                    });
                    break;
                default: feature = null;
            }
            if (feature) { AMap.event.addListener(feature, "click", mapFeatureClick); }
        }
    }

    function mapFeatureClick(e) {
        if (!infoWindow) { infoWindow = new AMap.InfoWindow({ autoMove: true }); }
        var extData = e.target.getExtData();
        infoWindow.setContent("<h5>" + extData.name + "</h5><div>" + extData.desc + "</div>");
        infoWindow.open(map, e.lnglat);
    }

    map = new AMap.Map("mapContainer-{{ id }}", { center: new AMap.LngLat(center.lng, center.lat), level: level });

    loadFeatures();

    map.on('complete', function () {
        map.plugin(["AMap.ToolBar", "AMap.OverView", "AMap.Scale"], function () {
            map.addControl(new AMap.ToolBar);
            map.addControl(new AMap.OverView({ isOpen: true }));
            map.addControl(new AMap.Scale);
        });
    })
            
        }();
    })
</script>";s:4:"code";s:113:"function onRun(){
    $this->addJs('http://webapi.amap.com/maps?v=1.3&key=8325164e247e15eea68b59e89200988b');
}";s:7:"viewBag";a:3:{s:11:"snippetCode";s:5:"GDmap";s:11:"snippetName";s:12:"高德地图";s:17:"snippetProperties";a:7:{s:3:"lng";a:4:{s:5:"title";s:6:"经度";s:4:"type";s:6:"string";s:7:"default";s:10:"113.360288";s:7:"options";a:1:{i:0;s:0:"";}}s:3:"lat";a:4:{s:5:"title";s:6:"纬度";s:4:"type";s:6:"string";s:7:"default";s:9:"22.915366";s:7:"options";a:1:{i:0;s:0:"";}}s:5:"width";a:4:{s:5:"title";s:6:"宽度";s:4:"type";s:6:"string";s:7:"default";s:0:"";s:7:"options";a:1:{i:0;s:0:"";}}s:6:"height";a:4:{s:5:"title";s:6:"高度";s:4:"type";s:6:"string";s:7:"default";s:5:"400px";s:7:"options";a:1:{i:0;s:0:"";}}s:4:"name";a:4:{s:5:"title";s:12:"地点名称";s:4:"type";s:6:"string";s:7:"default";s:0:"";s:7:"options";a:1:{i:0;s:0:"";}}s:11:"description";a:4:{s:5:"title";s:12:"地点描述";s:4:"type";s:6:"string";s:7:"default";s:0:"";s:7:"options";a:1:{i:0;s:0:"";}}s:2:"id";a:4:{s:5:"title";s:8:"地图ID";s:4:"type";s:6:"string";s:7:"default";s:0:"";s:7:"options";a:1:{i:0;s:0:"";}}}}}}